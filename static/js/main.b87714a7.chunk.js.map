{"version":3,"sources":["components/InputError.js","utilities/PeselValidator.js","components/Inputs/PeselInput.js","components/AgeToday.js","components/AgePast.js","App.js","serviceWorker.js","index.js"],"names":["InputError","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errorMessage","react_default","a","createElement","className","length","Component","PeselValidator","pesel","isValid","aInt","i","parseInt","substring","isNaN","wagi","sum","year","Math","floor","month","day","d","m","y","dt","Date","getDate","getMonth","getFullYear","checkDate","date","gender","PeselInput","handlePeselInput","event","target","value","peselValidator","validatePesel","setPatientBirthday","setPatientGender","setState","peselErrorMessage","bind","assertThisInitialized","_this2","type","onChange","onClick","components_InputError","AgeToday","calculateAge","birthday","ageDifMs","now","getTime","ageDate","abs","getUTCFullYear","patientBirthday","age","concat","dist_default","format","Inputs_PeselInput","build_default","react_countup_build_default","end","AgePast","examinationDate","App","renderCurrentPage","currentPage","components_AgeToday","components_AgePast","handleNavigation","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b87714a7.chunk.js","sourcesContent":["import React from 'react'\nimport {Component} from 'react';\n\nclass InputError extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            errorMessage: props.errorMessage\n        };\n    }\n\n    render() {\n        return (\n            <span className={this.props.errorMessage.length > 0 ? 'error-message show' : 'error-message'}>{this.props.errorMessage}</span>\n        );\n    }\n}\n\nexport default InputError;","class PeselValidator {\n    constructor (pesel) {\n        this.pesel = pesel;\n    }\n\n    static validatePesel(pesel) {\n        if (pesel.length <= 5) {\n            return {\n                isValid: false,\n                errorMessage: \"\"\n            };\n        }\n        if (pesel.length > 5 && pesel.length < 11) {\n            return {\n                isValid: false,\n                errorMessage: \"Zbyt krótki numer\"\n            };\n        }\n\n        if (pesel.length > 11) {\n            return {\n                isValid: false,\n                errorMessage: \"Zbyt długi numer\"\n            }\n        }\n\n        let aInt = [];\n        for (let i = 0; i < 11; i++)\n        {\n            aInt[i] = parseInt(pesel.substring(i, i + 1));\n            if (isNaN(aInt[i])) {\n                return {\n                    isValid: false,\n                    errorMessage: \"Dozwolone znaki: 0-9\"\n                };\n            }\n        }\n\n        let wagi = [1, 3, 7, 9, 1, 3, 7, 9, 1, 3, 1];\n        let sum = 0;\n        for (let i = 0; i < 11; i++)\n            sum += wagi[i] * aInt[i];\n        if ((sum % 10) !== 0) {\n            return {\n                isValid: false,\n                errorMessage: \"Podano nieprawidłowy numer PESEL\"\n            };\n        }\n\n        var year = 1900+aInt[0]*10+aInt[1];\n        if (aInt[2]>=2 && aInt[2]<8)\n            year+=Math.floor(aInt[2]/2)*100;\n        if (aInt[2]>=8)\n            year-=100;\n\n        var month = (aInt[2]%2)*10+aInt[3];\n        var day = aInt[4]*10+aInt[5];\n\n        function checkDate(d,m,y) {\n            var dt = new Date(y, m-1, d);\n            return dt.getDate() === d && dt.getMonth() === m-1 && dt.getFullYear() === y;\n        }\n\n        if (!checkDate(day, month, year)) {\n            return {\n                isValid: false,\n                errorMessage: \"Wygenerowana data jest nieprawidłowa\"\n            };\n        }\n\n        let gender = (aInt[9] % 2 === 1) ? \"M\" : \"F\";\n\n        month = month < 10 ? \"0\" + month : month;\n\n        return {\n            isValid: true,\n            errorMessage: \"\",\n            date: {\n                day: day,\n                month: month,\n                year: year\n            },\n            gender: gender\n        };\n    }\n}\n\nexport default PeselValidator;","import React from 'react'\nimport {Component} from 'react';\nimport InputError from \"../InputError\";\nimport PeselValidator from \"../../utilities/PeselValidator\";\n\nclass PeselInput extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            peselErrorMessage: props.peselErrorMessage,\n            pesel: props.pesel,\n        };\n        this.handlePeselInput = this.handlePeselInput.bind(this);\n    }\n\n    handlePeselInput = function (event) {\n        const pesel = event.target.value;\n        let peselValidator = PeselValidator.validatePesel(pesel);\n\n        if (peselValidator.isValid) {\n            this.props.setPatientBirthday(peselValidator.date);\n            this.props.setPatientGender(peselValidator.gender);\n        } else {\n            this.props.setPatientGender(\"\");\n        }\n        this.setState({pesel: pesel, peselErrorMessage: peselValidator.errorMessage});\n    };\n\n    render() {\n        let pesel = this.state.pesel;\n        let peselErrorMessage = this.state.peselErrorMessage;\n\n        return (\n            <div className=\"input-wrapper pesel-wrapper\">\n                <span className=\"input-label\">Numer PESEL</span>\n                <div className=\"input-resetable\">\n                    <input\n                        type=\"tel\"\n                        className=\"input\"\n                        value={pesel}\n                        onChange={this.handlePeselInput}\n                    />\n                    <span className=\"reset-button\" onClick={() => {\n                        this.setState({pesel: \"\"});\n                        this.props.setPatientGender(\"\");\n                    }}>X</span>\n                </div>\n                <InputError errorMessage={peselErrorMessage} />\n            </div>\n        );\n    }\n}\n\nexport default PeselInput;","import React from 'react';\nimport {Component} from 'react'\nimport Flatpickr from \"react-flatpickr\";\nimport Moment from \"react-moment\";\nimport CountUp from 'react-countup';\nimport InputError from \"./InputError\";\nimport PeselValidator from \"../utilities/PeselValidator\";\nimport PeselInput from \"./Inputs/PeselInput\";\n\nclass AgeToday extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pesel: \"\",\n            patientBirthday: \"1996-08-30\",\n            age: 0,\n            peselErrorMessage: \"\",\n            gender: \"\"\n        };\n        this.setPatientBirthday = this.setPatientBirthday.bind(this);\n        this.setPatientGender = this.setPatientGender.bind(this);\n    }\n\n    calculateAge = function (birthday) {\n        if (typeof birthday !== \"string\") {\n            birthday = birthday[0];\n        } else {\n            birthday = new Date(birthday);\n        }\n        var ageDifMs = Date.now() - birthday.getTime();\n        var ageDate = new Date(ageDifMs); // miliseconds from epoch\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\n    };\n\n    setPatientBirthday(patientBirthday) {\n        this.setState({\n            patientBirthday: `${patientBirthday.year}-${patientBirthday.month}-${patientBirthday.day}`\n        });\n    }\n\n    setPatientGender(gender) {\n        this.setState({\n            gender: gender\n        });\n    }\n\n    render() {\n        let pesel = this.state.pesel;\n        let patientBirthday = this.state.patientBirthday;\n        let age = this.calculateAge(patientBirthday);\n        let peselErrorMessage = this.state.peselErrorMessage;\n        let gender = this.state.gender;\n\n        return (\n            <div className=\"age-today\">\n                <h2 className=\"content-title\">Wiek na dziś - <span className=\"date\"><Moment format=\"DD.MM.YYYY\"/></span>\n                </h2>\n                <div className=\"date-age-wrapper\">\n                    <div className=\"dates\">\n                        <PeselInput setPatientBirthday={this.setPatientBirthday}\n                                    setPatientGender={this.setPatientGender}\n                                    patientBirthday={patientBirthday}\n                                    pesel={pesel}\n                                    peselErrorMessage={peselErrorMessage}\n                        />\n                        <span className=\"or-wrapper\">lub</span>\n                        <div className=\"input-wrapper date-wrapper\">\n                            <span className=\"input-label\">Data urodzenia</span>\n                            <Flatpickr\n                                className=\"input\"\n                                value={patientBirthday}\n                                onChange={patientBirthday => {\n                                    this.setState({\n                                        patientBirthday: patientBirthday,\n                                        age: this.calculateAge(patientBirthday),\n                                        pesel: \"\"\n                                    });\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className={gender !== \"\" ? gender === \"M\" ? \"age male\" : \"age female\" : \"age\"}>\n                        <div\n                            className=\"gender-sign\">{gender !== \"\" ? gender === \"M\" ? \"mężczyzna ♂\" : \"kobieta ♀\" : \"\"}</div>\n                        <div className=\"age-number\">\n                            <CountUp end={age}/>\n                        </div>\n                        <div className=\"age-text\">wiek</div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AgeToday","import React from 'react';\nimport {Component} from 'react'\nimport Flatpickr from \"react-flatpickr\";\nimport Moment from \"react-moment\";\nimport CountUp from \"react-countup/build\";\nimport PeselInput from \"./Inputs/PeselInput\";\n\nclass AgePast extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            pesel: \"\",\n            peselErrorMessage: \"\",\n            patientBirthday: \"1996-08-30\",\n            examinationDate: \"2019-08-30\",\n            age: 0,\n            gender: \"\"\n        };\n        this.setPatientBirthday = this.setPatientBirthday.bind(this);\n        this.setPatientGender = this.setPatientGender.bind(this);\n    }\n\n    calculateAge = function (birthday, examinationDate) {\n        if (typeof birthday !== \"string\") {\n            birthday = birthday[0];\n        } else {\n            birthday = new Date(birthday);\n        }\n        if (typeof examinationDate !== \"string\") {\n            examinationDate = examinationDate[0];\n        } else {\n            examinationDate = new Date(examinationDate);\n        }\n        var ageDifMs = examinationDate - birthday.getTime();\n        var ageDate = new Date(ageDifMs); // miliseconds from epoch\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\n    };\n\n    setPatientBirthday(patientBirthday) {\n        this.setState({\n            patientBirthday: `${patientBirthday.year}-${patientBirthday.month}-${patientBirthday.day}`\n        })\n    }\n\n    setPatientGender(gender) {\n        this.setState({\n            gender: gender\n        });\n    }\n\n    render() {\n        let pesel = this.state.pesel;\n        let patientBirthday = this.state.patientBirthday;\n        let peselErrorMessage = this.state.peselErrorMessage;\n        let examinationDate = this.state.examinationDate;\n        let age = this.calculateAge(patientBirthday, examinationDate);\n        let gender = this.state.gender;\n\n        return (\n            <div className=\"age-past\">\n                <h2 className=\"content-title\">Wiek na dzień badania - <span className=\"date\"><Moment format=\"DD.MM.YYYY\" date={typeof examinationDate !== \"string\" ? examinationDate[0] : examinationDate} /></span></h2>\n                <div className=\"date-age-wrapper\">\n                    <div className=\"dates\">\n                        <PeselInput setPatientBirthday={this.setPatientBirthday}\n                                    setPatientGender={this.setPatientGender}\n                                    patientBirthday={patientBirthday}\n                                    pesel={pesel}\n                                    peselErrorMessage={peselErrorMessage}\n                        />\n                        <span className=\"or-wrapper\">lub</span>\n                        <div className=\"input-wrapper date-wrapper\">\n                            <span className=\"input-label\">Data urodzenia</span>\n                            <Flatpickr\n                                className=\"input\"\n                                value={patientBirthday}\n                                onChange={patientBirthday => {\n                                    this.setState({\n                                        patientBirthday: patientBirthday,\n                                        age: this.calculateAge(patientBirthday, examinationDate)\n                                    });\n                                }}\n                            />\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <span className=\"input-label\">Data badania</span>\n                            <Flatpickr\n                                className=\"input\"\n                                value={examinationDate}\n                                onChange={examinationDate => {\n                                    this.setState({\n                                        examinationDate: examinationDate,\n                                        age: this.calculateAge(patientBirthday, examinationDate)\n                                    });\n                                }}\n                            />\n                        </div>\n                    </div>\n                    <div className={gender !== \"\" ? gender === \"M\" ? \"age male\" : \"age female\" : \"age\"}>\n                        <div className=\"gender-sign\">{gender !== \"\" ? gender === \"M\" ? \"mężczyzna ♂\" : \"kobieta ♀\" : \"\"}</div>\n                        <div className=\"age-number\">\n                            <CountUp end={age}/>\n                        </div>\n                        <div className=\"age-text\">wiek</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AgePast;","import React from 'react';\nimport {Component} from 'react'\nimport 'flatpickr/dist/themes/material_green.css'\nimport 'moment/locale/pl';\nimport './App.css';\nimport AgeToday from \"./components/AgeToday\";\nimport AgePast from \"./components/AgePast\";\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 'today'\n        };\n\n        this.handleNavigation = this.handleNavigation.bind(this);\n    }\n\n    handleNavigation(currentPage) {\n        this.setState({currentPage: currentPage});\n    }\n\n    renderCurrentPage = function () {\n        if (this.state.currentPage === 'today') {\n            return <AgeToday/>;\n        } else {\n            return <AgePast/>;\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"app\">\n                <ReactCSSTransitionGroup\n                    transitionName=\"example\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={500}\n                    transitionEnter={true}\n                    transitionLeave={true}\n                    className=\"animation-container\"\n                >\n                    <div className=\"wrapper\">\n                        <header className=\"header\">\n                            <h1 className=\"header-title\">Wiek pacjentów</h1>\n                            <nav className=\"nav\">\n                                <button className={this.state.currentPage === 'today' ? 'nav-btn active' : 'nav-btn'}\n                                        onClick={() => this.handleNavigation('today')}>Wiek na dzisiaj\n                                </button>\n                                <button className={this.state.currentPage === 'past' ? 'nav-btn active' : 'nav-btn'}\n                                        onClick={() => this.handleNavigation('past')}>Wiek na dzień badania\n                                </button>\n                            </nav>\n                        </header>\n\n                        <div className=\"content\">\n                            {this.renderCurrentPage()}\n                        </div>\n                    </div>\n\n                    <footer className=\"footer\">\n                        © 2019 ARTdent by\n                        <a href=\"http://jacekgalka.pl?utm_source=artdent&utm_medium=footer-link\">\n                             Jacek Gałka\n                            <div className=\"footer-border\" />\n                        </a>\n                    </footer>\n                </ReactCSSTransitionGroup>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}